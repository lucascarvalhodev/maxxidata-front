{"ast":null,"code":"//import axios from \"axios\";\nimport axios from \"axios\";\nvar fakeData = [{\n  id: \"1\",\n  name: \"Lucas Carvalho\",\n  email: \"lucas.carvalho@gopress.com\",\n  telephone: \"(88) 88888-8888\",\n  typeOfProfessional: \"1\",\n  situation: true\n}, {\n  id: \"2\",\n  name: \"222222 Carvalho\",\n  email: \"22222.carvalho@gopress.com\",\n  telephone: \"(88) 88888-8888\",\n  typeOfProfessional: \"1\",\n  situation: true\n}, {\n  id: \"3\",\n  name: \"333333 Carvalho\",\n  email: \"33333333.carvalho@gopress.com\",\n  telephone: \"(88) 88888-8888\",\n  typeOfProfessional: \"1\",\n  situation: true\n}, {\n  id: \"4\",\n  name: \"4444444 Carvalho\",\n  email: \"4444444.carvalho@gopress.com\",\n  telephone: \"(88) 88888-8888\",\n  typeOfProfessional: \"1\",\n  situation: true\n}];\nexport const getProfessionals = () => axios.get(\"/professionals\");\nexport function getProfessional(id) {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      let pro = fakeData.find(p => p.id === id);\n\n      if (!pro) {\n        reject();\n      }\n\n      resolve(pro);\n    }, 1000);\n  });\n}\nexport function editProfessional(id, data) {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      let find = false;\n      fakeData = fakeData.map(p => {\n        if (id === p.id) {\n          data.id = id;\n          find = true;\n          return data;\n        }\n\n        return p;\n      });\n\n      if (!find) {\n        reject();\n      }\n\n      resolve(data);\n    }, 1000);\n  });\n}\nexport function createProfessional(data) {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      data.id = \"now\" + Math.random();\n      fakeData.push(data);\n      resolve(data);\n    }, 1000);\n  });\n}\nexport function deleteProfessional(id) {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      let find = false;\n      fakeData = fakeData.filter(p => {\n        if (id === p.id) {\n          find = true;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (!find) {\n        reject();\n      }\n\n      resolve(id);\n    }, 1000);\n  });\n}","map":{"version":3,"sources":["/home/lucas/lucas/gopress/src/services/professionals.ts"],"names":["axios","fakeData","id","name","email","telephone","typeOfProfessional","situation","getProfessionals","get","getProfessional","Promise","resolve","reject","setTimeout","pro","find","p","editProfessional","data","map","createProfessional","Math","random","push","deleteProfessional","filter"],"mappings":"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","sourcesContent":["//import axios from \"axios\";\n\nimport axios from \"axios\";\nimport { IProfessional } from \"../alias/IProfessional\";\n\nvar fakeData: IProfessional[] = [\n  {\n    id: \"1\",\n    name: \"Lucas Carvalho\",\n    email: \"lucas.carvalho@gopress.com\",\n    telephone: \"(88) 88888-8888\",\n    typeOfProfessional: \"1\",\n    situation: true,\n  },\n  {\n    id: \"2\",\n    name: \"222222 Carvalho\",\n    email: \"22222.carvalho@gopress.com\",\n    telephone: \"(88) 88888-8888\",\n    typeOfProfessional: \"1\",\n    situation: true,\n  },\n  {\n    id: \"3\",\n    name: \"333333 Carvalho\",\n    email: \"33333333.carvalho@gopress.com\",\n    telephone: \"(88) 88888-8888\",\n    typeOfProfessional: \"1\",\n    situation: true,\n  },\n  {\n    id: \"4\",\n    name: \"4444444 Carvalho\",\n    email: \"4444444.carvalho@gopress.com\",\n    telephone: \"(88) 88888-8888\",\n    typeOfProfessional: \"1\",\n    situation: true,\n  },\n];\n\nexport const getProfessionals = () => axios.get(\"/professionals\");\n\nexport function getProfessional(\n  id: string\n): Promise<IProfessional | undefined> {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      let pro = fakeData.find((p) => p.id === id);\n\n      if (!pro) {\n        reject();\n      }\n\n      resolve(pro);\n    }, 1000);\n  });\n}\n\nexport function editProfessional(\n  id: string,\n  data: IProfessional\n): Promise<IProfessional> {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      let find = false;\n      fakeData = fakeData.map((p) => {\n        if (id === p.id) {\n          data.id = id;\n          find = true;\n          return data;\n        }\n        return p;\n      });\n\n      if (!find) {\n        reject();\n      }\n\n      resolve(data);\n    }, 1000);\n  });\n}\n\nexport function createProfessional(\n  data: IProfessional\n): Promise<IProfessional> {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      data.id = \"now\" + Math.random();\n      fakeData.push(data);\n      resolve(data);\n    }, 1000);\n  });\n}\n\nexport function deleteProfessional(id: string): Promise<String> {\n  return new Promise(async function (resolve, reject) {\n    setTimeout(() => {\n      let find = false;\n      fakeData = fakeData.filter((p) => {\n        if (id === p.id) {\n          find = true;\n          return false;\n        }\n        return true;\n      });\n\n      if (!find) {\n        reject();\n      }\n\n      resolve(id);\n    }, 1000);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}