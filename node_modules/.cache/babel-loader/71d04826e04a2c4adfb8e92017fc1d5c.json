{"ast":null,"code":"var _jsxFileName = \"/home/lucas/lucas/gopress/src/components/form/FormProfessional.tsx\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"../Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = Yup.object().shape({\n  name: Yup.string().min(4).max(150).required(),\n  email: Yup.string().email().min(4).max(150).required(),\n  telephone: Yup.string().min(10).max(25).required(),\n  typeOfProfessional: Yup.string().required(),\n  situation: Yup.boolean()\n});\nconst defaultValues = {\n  name: \"\",\n  email: \"\",\n  telephone: \"\",\n  typeOfProfessional: \"\",\n  situation: false\n};\n\nconst FormProfessional = ({\n  onSubmit,\n  loading,\n  initialValues = defaultValues,\n  typeOfProfessionals\n}) => {\n  initialValues.typeOfProfessional = initialValues.typeOfProfessional.id;\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: schema,\n    onSubmit: (values, action) => {\n      onSubmit(values, action);\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nameInput\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          \"data-testid\": \"name\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"nameInput\",\n          placeholder: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailInput\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          \"data-testid\": \"email\",\n          type: \"email\",\n          className: \"form-control\",\n          id: \"emailInput\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emailInput\",\n          children: \"Telephone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"telephone\",\n          \"data-testid\": \"telephone\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"emailInput\",\n          placeholder: \"Enter telephone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"telephone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"typeOfProfessionalSelect\",\n          children: \"Type Of Professional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"select\",\n          name: \"typeOfProfessional\",\n          \"data-testid\": \"typeOfProfessional\",\n          className: \"form-control\",\n          id: \"typeOfProfessionalSelect\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: undefined,\n            children: \"select a profession type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), typeOfProfessionals.map(top => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: top.id,\n            children: top.description\n          }, top.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"typeOfProfessional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"situationSelect\",\n          children: \"Situation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"select\",\n          name: \"situation\",\n          \"data-testid\": \"situation\",\n          className: \"form-control\",\n          id: \"situationSelect\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"Inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text text-danger\",\n          children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"situation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        loading: loading,\n        className: \"btn-block mt-4 mb-3\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormProfessional;\nexport default FormProfessional;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormProfessional\");","map":{"version":3,"sources":["/home/lucas/lucas/gopress/src/components/form/FormProfessional.tsx"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","Button","schema","object","shape","name","string","min","max","required","email","telephone","typeOfProfessional","situation","boolean","defaultValues","FormProfessional","onSubmit","loading","initialValues","typeOfProfessionals","id","values","action","undefined","map","top","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"../Button\";\nimport { IProfessional } from \"../../alias/IProfessional\";\nimport { ITypeOfProfessional } from \"../../alias/ITypeOfProfessional\";\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(4).max(150).required(),\n  email: Yup.string().email().min(4).max(150).required(),\n  telephone: Yup.string().min(10).max(25).required(),\n  typeOfProfessional: Yup.string().required(),\n  situation: Yup.boolean(),\n});\n\ninterface IProps {\n  onSubmit(value: IProfessional, action: FormikHelpers<IProfessional>): void;\n  loading: boolean;\n  initialValues?: IProfessional;\n  typeOfProfessionals: ITypeOfProfessional[];\n}\n\nconst defaultValues = {\n  name: \"\",\n  email: \"\",\n  telephone: \"\",\n  typeOfProfessional: \"\",\n  situation: false,\n};\n\nconst FormProfessional: React.FC<IProps> = ({\n  onSubmit,\n  loading,\n  initialValues = defaultValues,\n  typeOfProfessionals,\n}) => {\n  initialValues.typeOfProfessional = initialValues.typeOfProfessional.id;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, action: FormikHelpers<IProfessional>) => {\n        onSubmit(values, action);\n      }}\n    >\n      <Form>\n        <div className=\"form-group\">\n          <label htmlFor=\"nameInput\">Name</label>\n          <Field\n            name=\"name\"\n            data-testid=\"name\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"nameInput\"\n            placeholder=\"Enter name\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"name\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"emailInput\">Email address</label>\n          <Field\n            name=\"email\"\n            data-testid=\"email\"\n            type=\"email\"\n            className=\"form-control\"\n            id=\"emailInput\"\n            placeholder=\"Enter email\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"email\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"emailInput\">Telephone</label>\n          <Field\n            name=\"telephone\"\n            data-testid=\"telephone\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"emailInput\"\n            placeholder=\"Enter telephone\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"telephone\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"typeOfProfessionalSelect\">Type Of Professional</label>\n          <Field\n            as=\"select\"\n            name=\"typeOfProfessional\"\n            data-testid=\"typeOfProfessional\"\n            className=\"form-control\"\n            id=\"typeOfProfessionalSelect\"\n          >\n            <option value={undefined}>select a profession type</option>\n            {typeOfProfessionals.map((top) => (\n              <option key={top.id} value={top.id}>\n                {top.description}\n              </option>\n            ))}\n          </Field>\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"typeOfProfessional\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"situationSelect\">Situation</label>\n          <Field\n            as=\"select\"\n            name=\"situation\"\n            data-testid=\"situation\"\n            className=\"form-control\"\n            id=\"situationSelect\"\n          >\n            <option value=\"true\">Active</option>\n            <option value=\"false\">Inactive</option>\n          </Field>\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"situation\" />\n          </small>\n        </div>\n\n        <Button type=\"submit\" loading={loading} className=\"btn-block mt-4 mb-3\">\n          Submit\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormProfessional;\n"]},"metadata":{},"sourceType":"module"}