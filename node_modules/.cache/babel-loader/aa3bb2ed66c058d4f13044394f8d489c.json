{"ast":null,"code":"import _objectSpread from\"/home/lucas/lucas/gopress/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Formik,Form,Field,ErrorMessage}from\"formik\";import*as Yup from\"yup\";import Button from\"../Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var schema=Yup.object().shape({name:Yup.string().min(4).max(150).required(),email:Yup.string().email().min(4).max(150).required(),telephone:Yup.string().min(10).max(25).required(),typeOfProfessionalId:Yup.string().required(),situation:Yup.boolean()});var defaultValues={name:\"\",email:\"\",telephone:\"\",typeOfProfessional:{},typeOfProfessionalId:\"\",situationString:\"inactive\",situation:false};var FormProfessional=function FormProfessional(_ref){var onSubmit=_ref.onSubmit,loading=_ref.loading,_ref$initialValues=_ref.initialValues,initialValues=_ref$initialValues===void 0?defaultValues:_ref$initialValues,typeOfProfessionals=_ref.typeOfProfessionals;var data=_objectSpread(_objectSpread({},initialValues),{},{typeOfProfessionalId:initialValues.typeOfProfessional.id,situationString:initialValues.situation?\"active\":\"inactive\"});return/*#__PURE__*/_jsx(Formik,{initialValues:data,validationSchema:schema,onSubmit:function(_onSubmit){function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}onSubmit.toString=function(){return _onSubmit.toString();};return onSubmit;}(function(values,action){var topData=typeOfProfessionals.find(function(top){return top.id===values.typeOfProfessionalId;});if(topData)values.typeOfProfessional=topData;values.situation=values.situationString===\"active\"?true:false;delete values.typeOfProfessionalId;delete values.situationString;onSubmit(values,action);}),children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nameInput\",children:\"Name\"}),/*#__PURE__*/_jsx(Field,{name:\"name\",\"data-testid\":\"name\",type:\"text\",className:\"form-control\",id:\"nameInput\",placeholder:\"Enter name\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"name\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"emailInput\",children:\"Email address\"}),/*#__PURE__*/_jsx(Field,{name:\"email\",\"data-testid\":\"email\",type:\"email\",className:\"form-control\",id:\"emailInput\",placeholder:\"Enter email\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"emailInput\",children:\"Telephone\"}),/*#__PURE__*/_jsx(Field,{name:\"telephone\",\"data-testid\":\"telephone\",type:\"text\",className:\"form-control\",id:\"emailInput\",placeholder:\"Enter telephone\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"telephone\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"typeOfProfessionalSelect\",children:\"Type Of Professional\"}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"typeOfProfessionalId\",\"data-testid\":\"typeOfProfessionalId\",className:\"form-control\",id:\"typeOfProfessionalSelect\",children:[/*#__PURE__*/_jsx(\"option\",{value:undefined,children:\"select a profession type\"}),typeOfProfessionals.filter(function(top){return top.situation;}).map(function(top){return/*#__PURE__*/_jsx(\"option\",{value:top.id,children:top.description},top.id);})]}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"typeOfProfessionalId\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"situationSelect\",children:\"Situation\"}),/*#__PURE__*/_jsxs(Field,{as:\"select\",name:\"situationString\",\"data-testid\":\"situationString\",className:\"form-control\",id:\"situationSelect\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"active\",children:\"Active\"}),/*#__PURE__*/_jsx(\"option\",{value:\"inactive\",children:\"Inactive\"})]}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"situationString\"})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",loading:loading,className:\"btn-block mt-4 mb-3\",children:\"Submit\"})]})});};export default FormProfessional;","map":{"version":3,"sources":["/home/lucas/lucas/gopress/src/components/form/FormProfessional.tsx"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","Button","schema","object","shape","name","string","min","max","required","email","telephone","typeOfProfessionalId","situation","boolean","defaultValues","typeOfProfessional","situationString","FormProfessional","onSubmit","loading","initialValues","typeOfProfessionals","data","id","values","action","topData","find","top","undefined","filter","map","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"../Button\";\nimport { ITypeOfProfessional } from \"../../alias/ITypeOfProfessional\";\nimport { IProfessional } from \"../../alias/IProfessional\";\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(4).max(150).required(),\n  email: Yup.string().email().min(4).max(150).required(),\n  telephone: Yup.string().min(10).max(25).required(),\n  typeOfProfessionalId: Yup.string().required(),\n  situation: Yup.boolean(),\n});\n\ninterface IPD extends IProfessional {\n  typeOfProfessionalId?: string;\n  situationString?: string;\n}\n\ninterface IProps {\n  onSubmit(value: IPD, action: FormikHelpers<IPD>): void;\n  loading: boolean;\n  initialValues?: IProfessional;\n  typeOfProfessionals: ITypeOfProfessional[];\n}\n\nconst defaultValues: IPD = {\n  name: \"\",\n  email: \"\",\n  telephone: \"\",\n  typeOfProfessional: {} as ITypeOfProfessional,\n  typeOfProfessionalId: \"\",\n  situationString: \"inactive\",\n  situation: false,\n};\n\nconst FormProfessional: React.FC<IProps> = ({\n  onSubmit,\n  loading,\n  initialValues = defaultValues,\n  typeOfProfessionals,\n}) => {\n  const data = {\n    ...initialValues,\n    typeOfProfessionalId: initialValues.typeOfProfessional.id,\n    situationString: initialValues.situation ? \"active\" : \"inactive\",\n  } as IPD;\n\n  return (\n    <Formik\n      initialValues={data}\n      validationSchema={schema}\n      onSubmit={(values, action: FormikHelpers<IPD>) => {\n        const topData = typeOfProfessionals.find(\n          (top) => top.id === values.typeOfProfessionalId\n        );\n\n        if (topData) values.typeOfProfessional = topData;\n\n        values.situation = values.situationString === \"active\" ? true : false;\n\n        delete values.typeOfProfessionalId;\n        delete values.situationString;\n\n        onSubmit(values, action);\n      }}\n    >\n      <Form>\n        <div className=\"form-group\">\n          <label htmlFor=\"nameInput\">Name</label>\n          <Field\n            name=\"name\"\n            data-testid=\"name\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"nameInput\"\n            placeholder=\"Enter name\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"name\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"emailInput\">Email address</label>\n          <Field\n            name=\"email\"\n            data-testid=\"email\"\n            type=\"email\"\n            className=\"form-control\"\n            id=\"emailInput\"\n            placeholder=\"Enter email\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"email\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"emailInput\">Telephone</label>\n          <Field\n            name=\"telephone\"\n            data-testid=\"telephone\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"emailInput\"\n            placeholder=\"Enter telephone\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"telephone\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"typeOfProfessionalSelect\">Type Of Professional</label>\n          <Field\n            as=\"select\"\n            name=\"typeOfProfessionalId\"\n            data-testid=\"typeOfProfessionalId\"\n            className=\"form-control\"\n            id=\"typeOfProfessionalSelect\"\n          >\n            <option value={undefined}>select a profession type</option>\n            {typeOfProfessionals\n              .filter((top) => top.situation)\n              .map((top) => (\n                <option key={top.id} value={top.id}>\n                  {top.description}\n                </option>\n              ))}\n          </Field>\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"typeOfProfessionalId\" />\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"situationSelect\">Situation</label>\n          <Field\n            as=\"select\"\n            name=\"situationString\"\n            data-testid=\"situationString\"\n            className=\"form-control\"\n            id=\"situationSelect\"\n          >\n            <option value=\"active\">Active</option>\n            <option value=\"inactive\">Inactive</option>\n          </Field>\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"situationString\" />\n          </small>\n        </div>\n\n        <Button type=\"submit\" loading={loading} className=\"btn-block mt-4 mb-3\">\n          Submit\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormProfessional;\n"]},"metadata":{},"sourceType":"module"}