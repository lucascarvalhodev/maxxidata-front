{"ast":null,"code":"import React from\"react\";import{Formik,Form,Field,ErrorMessage}from\"formik\";import*as Yup from\"yup\";import Button from\"../Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var schema=Yup.object().shape({email:Yup.string().email().min(4).max(150).required(),password:Yup.string().min(4).max(150).required()});var FormSignIn=function FormSignIn(_ref){var onSubmit=_ref.onSubmit,loading=_ref.loading;var initialValues={email:\"lucasdecarvalho13@hotmail.com\",password:\"123123\"};return/*#__PURE__*/_jsx(Formik,{initialValues:initialValues,validationSchema:schema,onSubmit:function(_onSubmit){function onSubmit(_x,_x2){return _onSubmit.apply(this,arguments);}onSubmit.toString=function(){return _onSubmit.toString();};return onSubmit;}(function(values,action){onSubmit(values,action);}),children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"emailInput\",children:\"Email address\"}),/*#__PURE__*/_jsx(Field,{name:\"email\",\"data-testid\":\"email\",type:\"email\",className:\"form-control\",id:\"emailInput\",placeholder:\"Enter email\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"passwordInput\",children:\"Password\"}),/*#__PURE__*/_jsx(Field,{name:\"password\",\"data-testid\":\"password\",type:\"password\",className:\"form-control\",id:\"passwordInput\",placeholder:\"Enter password\"}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text text-danger\",children:/*#__PURE__*/_jsx(ErrorMessage,{name:\"password\"})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",loading:loading,className:\"btn-block mt-4 mb-3\",children:\"Submit\"})]})});};export default FormSignIn;","map":{"version":3,"sources":["/home/lucas/lucas/gopress/src/components/form/FormSignIn.tsx"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","Button","schema","object","shape","email","string","min","max","required","password","FormSignIn","onSubmit","loading","initialValues","values","action"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,YAA9B,KAAiE,QAAjE,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,C,wFAGA,GAAMC,CAAAA,MAAM,CAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB,CAChCC,KAAK,CAAEL,GAAG,CAACM,MAAJ,GAAaD,KAAb,GAAqBE,GAArB,CAAyB,CAAzB,EAA4BC,GAA5B,CAAgC,GAAhC,EAAqCC,QAArC,EADyB,CAEhCC,QAAQ,CAAEV,GAAG,CAACM,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BC,QAA7B,EAFsB,CAAnB,CAAf,CAUA,GAAME,CAAAA,UAA4B,CAAG,QAA/BA,CAAAA,UAA+B,MAA2B,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAdC,OAAc,MAAdA,OAAc,CAC9D,GAAMC,CAAAA,aAAoB,CAAG,CAC3BT,KAAK,CAAE,+BADoB,CAE3BK,QAAQ,CAAE,QAFiB,CAA7B,CAKA,mBACE,KAAC,MAAD,EACE,aAAa,CAAEI,aADjB,CAEE,gBAAgB,CAAEZ,MAFpB,CAGE,QAAQ,oKAAE,SAACa,MAAD,CAASC,MAAT,CAA0C,CAClDJ,QAAQ,CAACG,MAAD,CAASC,MAAT,CAAR,CACD,CAFO,CAHV,uBAOE,MAAC,IAAD,yBACE,aAAK,SAAS,CAAC,YAAf,wBACE,cAAO,OAAO,CAAC,YAAf,2BADF,cAEE,KAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,cAAY,OAFd,CAGE,IAAI,CAAC,OAHP,CAIE,SAAS,CAAC,cAJZ,CAKE,EAAE,CAAC,YALL,CAME,WAAW,CAAC,aANd,EAFF,cAUE,cAAO,SAAS,CAAC,uBAAjB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,EADF,EAVF,GADF,cAeE,aAAK,SAAS,CAAC,YAAf,wBACE,cAAO,OAAO,CAAC,eAAf,sBADF,cAEE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,cAAY,UAFd,CAGE,IAAI,CAAC,UAHP,CAIE,SAAS,CAAC,cAJZ,CAKE,EAAE,CAAC,eALL,CAME,WAAW,CAAC,gBANd,EAFF,cAUE,cAAO,SAAS,CAAC,uBAAjB,uBACE,KAAC,YAAD,EAAc,IAAI,CAAC,UAAnB,EADF,EAVF,GAfF,cA6BE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEH,OAA/B,CAAwC,SAAS,CAAC,qBAAlD,oBA7BF,GAPF,EADF,CA2CD,CAjDD,CAmDA,cAAeF,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"../Button\";\nimport { IUser } from \"../../alias/IUser\";\n\nconst schema = Yup.object().shape({\n  email: Yup.string().email().min(4).max(150).required(),\n  password: Yup.string().min(4).max(150).required(),\n});\n\ninterface IProps {\n  onSubmit(value: IUser, action: FormikHelpers<IUser>): void;\n  loading: boolean;\n}\n\nconst FormSignIn: React.FC<IProps> = ({ onSubmit, loading }) => {\n  const initialValues: IUser = {\n    email: \"lucasdecarvalho13@hotmail.com\",\n    password: \"123123\",\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, action: FormikHelpers<IUser>) => {\n        onSubmit(values, action);\n      }}\n    >\n      <Form>\n        <div className=\"form-group\">\n          <label htmlFor=\"emailInput\">Email address</label>\n          <Field\n            name=\"email\"\n            data-testid=\"email\"\n            type=\"email\"\n            className=\"form-control\"\n            id=\"emailInput\"\n            placeholder=\"Enter email\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"email\" />\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"passwordInput\">Password</label>\n          <Field\n            name=\"password\"\n            data-testid=\"password\"\n            type=\"password\"\n            className=\"form-control\"\n            id=\"passwordInput\"\n            placeholder=\"Enter password\"\n          />\n          <small className=\"form-text text-danger\">\n            <ErrorMessage name=\"password\" />\n          </small>\n        </div>\n        <Button type=\"submit\" loading={loading} className=\"btn-block mt-4 mb-3\">\n          Submit\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormSignIn;\n"]},"metadata":{},"sourceType":"module"}